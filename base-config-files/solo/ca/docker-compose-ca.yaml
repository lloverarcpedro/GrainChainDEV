# Compose file for launching the ca dev setup with
# a PostgreSQL for fabric-ca and the tool container

version: '2'

networks:
  grainchainnet:

# Storage for containers
volumes:
  data-cert-auth.grainchain.io:


services:
  #CA Postgres DB
  # cert-auth-db.grainchain.io:
  #   container_name: cert-auth-db.grainchain.io
  #   image: postgres:9.6
  #   restart: always
  #   environment:
  #     - POSTGRES_USER=postgres
  #     - POSTGRES_PASSWORD=gc2020bc
  #     - POSTGRES_DB=fabric_ca
  #   volumes:
  #     # Folder for db storage
  #     - /opt/shared_storage/ca_db_data:/var/lib/postgresql/data
  #   ports:
  #     - 5432:5432
  #   networks:
  #     - grainchainnet

  # CA service
  cert-auth.grainchain.io:
    container_name: cert-auth.grainchain.io
    image: hyperledger/fabric-ca
    command: fabric-ca-server start -b admin:gc2020bc --cfg.identities.allowremove
    # Override environment variables for orderer in this section
    environment:
      - FABRIC_CA_SERVER_HOME=/var/hyperledger/config
      - FABRIC_CA_HOME=/var/hyperledger/config
      - FABRIC_CA_SERVER_CA_NAME=cert-auth.grainchain.io
    volumes:
      # Folder with ca server configuration file
      - /vagrant/ca/server/config:/var/hyperledger/config
    # depends_on: 
    #   - cert-auth-db.grainchain.io
    ports: 
      - 7054:7054
    networks: 
      - grainchainnet

  #Tools container used for managing peers
  tools.grainchain.io:
    container_name: tools.grainchain.io
    command: /bin/bash

    # Tools container image
    image: hyperledger/fabric-tools:2.1.1

    tty: true
    stdin_open: true
    environment:
      - GOPATH=/opt/gopath
      - FABRIC_CFG_PATH=/var/hyperledger/config
      - FABRIC_LOGGING_SPEC=WARNING
    # This is the working directory on login
    working_dir: /opt/scripts
    volumes:
      # Mapping for the sample chaincode folders
      #- ${PWD}/../artefacts/nodechaincode:/opt/nodechaincode
      - /vagrant/gopath:/opt/gopath
      # Folder with channel create tx file
      #- ${PWD}/config:/var/hyperledger/config
      # Map the folder to root of all Fabric CA Client crypto
      #- ${PWD}/config/crypto-config/peerOrganizations:/var/hyperledger/crypto
      # VM docker stream folder mapping
      #- /var/run/:/host/var/run/
      # Map the bins folder
      - /vagrant/bin:/opt/scripts/gcscripts/bin
      - ${PWD}/setup:/opt/scripts
      - /vagrant:/var/hyperledger/config/vagrant
      - /vagrant/peer/config:/var/hyperledger/config
      - /vagrant/ca/client:/var/hyperledger/config/caclient
      - /vagrant/config/crypto-config/peerOrganizations/grainchain.com/peers/peer1.grainchain.com/msp:/var/hyperledger/msp
    networks:
      - grainchainnet

  
  